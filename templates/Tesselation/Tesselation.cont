{% extends "base.glsl" %}

{% block header %}
layout(vertices = 3) out;
in vec3 vPosition[];
in vec2 vUv[];
in vec3 vColor1[];
in vec3 vColor2[];
out vec3 tcPosition[];
out vec2 tcUv[];
out vec3 tcColor1[];
out vec3 tcColor2[];
uniform float TessLevelInner;
uniform float TessLevelOuter;

#define ID gl_InvocationID
{% endblock %}

{% block main %}
    tcPosition[ID] = vPosition[ID];
    tcUv[ID] = vUv[ID];
    tcColor1[ID] = vColor1[ID];
    tcColor2[ID] = vColor2[ID];
    if (ID == 0) {
        gl_TessLevelInner[0] = TessLevelInner;
        gl_TessLevelOuter[0] = TessLevelOuter;
        gl_TessLevelOuter[1] = TessLevelOuter;
        gl_TessLevelOuter[2] = TessLevelOuter;
    }
{% endblock %}
